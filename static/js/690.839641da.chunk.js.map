{"version":3,"file":"static/js/690.839641da.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/PnoneBook.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"inputForm\":\"ContactForm_inputForm__4bzZs\",\"addButton\":\"ContactForm_addButton__zGNsx\"};","export const selectContact = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selecttIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContact } from 'redux/contacts/selectors';\nimport { toast } from 'react-hot-toast';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const submitContact = e => {\n    e.preventDefault();\n\n    const duplicatedContact = contacts.find(\n      contact =>\n        contact.name.toLowerCase() ===\n        e.target.elements.name.value.toLowerCase()\n    );\n\n    if (duplicatedContact) {\n      return toast.error(`${duplicatedContact.name} is already in contacts`);\n    }\n\n    const newContact = {\n      name: e.target.elements.name.value,\n      phone: e.target.elements.number.value,\n    };\n\n    dispatch(addContact(newContact));\n\n    e.target.reset();\n  };\n\n  return (\n    <form onSubmit={submitContact} className={css.form}>\n      <label className={css.label} htmlFor=\"name\">\n        Name\n      </label>\n      <input type=\"text\" name=\"name\" required className={css.inputForm} />\n      <label className={css.label} htmlFor=\"number\">\n        Number\n      </label>\n      <input type=\"tel\" name=\"number\" required className={css.inputForm} />\n      <button type=\"submit\" className={css.addButton}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n  value: PropTypes.number,\n  onChange: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nexport default function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <div className={css.filter}>\n      <label className={css.filterLabel}>Find contacts by name</label>\n      <input\n        type=\"text\"\n        onChange={e =>\n          dispatch(setFilter(e.currentTarget.value.toLocaleLowerCase()))\n        }\n        name=\"filter\"\n        // value={filterData}\n        className={css.filterInput}\n      />\n    </div>\n  );\n}\nFilter.propTypes = {\n  filterData: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listContact\":\"ContactList_listContact__gg2c1\",\"listItem\":\"ContactList_listItem__SptUx\",\"text\":\"ContactList_text__+NWAW\",\"buttonDelete\":\"ContactList_buttonDelete__3LEoC\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContact, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContact);\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const actualContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterValue.toLowerCase())\n  );\n  return (\n    <ul className={css.listContact}>\n      {actualContacts &&\n        actualContacts.map(contact => (\n          <li key={contact.id} className={css.listItem}>\n            <p className={css.text}>\n              {contact.name}: {contact.phone}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n              className={css.buttonDelete}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  deleteContact: PropTypes.func,\n};\n","import ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Toaster } from 'react-hot-toast';\nimport { selectError, selecttIsLoading } from 'redux/contacts/selectors';\n\nexport function Phonebook() {\n  const isLoading = useSelector(selecttIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div className=\"container\">\n      <Toaster />\n      <h2 className=\"title\">Phonebook</h2>\n      <ContactForm />\n      <Filter />\n      <h2 className=\"title\">Contacts</h2>\n      {isLoading && <p>Loading...</p>}\n      {error && <p>Oops!Something went wrong. Error: {error}</p>}{' '}\n      <ContactList />\n    </div>\n  );\n}\n","import { Phonebook } from 'components/PnoneBook';\nimport React from 'react';\n\nconst Contacts = () => {\n  return <Phonebook />;\n};\n\nexport default Contacts;\n"],"names":["selectContact","state","contacts","items","selectFilter","filter","selecttIsLoading","isLoading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","duplicatedContact","find","contact","name","toLowerCase","target","elements","value","toast","newContact","phone","number","addContact","reset","className","css","htmlFor","type","required","Filter","onChange","setFilter","currentTarget","toLocaleLowerCase","ContactList","filterValue","actualContacts","includes","map","onClick","deleteContact","id","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}